

layout(location = 0) out vec4 oAlbedoMap;
layout(location = 1) out vec4 oNormalMap;
layout(location = 2) out vec4 oSpecularAndGlossMap;


vec4 GetDiffuseCoeff() {
#ifdef HAS_DIFFUSE_MAP
	return vSampleDiffuse(vGetTexCoord0());
#else
	return cbDiffuseProperty.uDiffuseColor;
#endif
}

vec2 GetSpecularAndGlossCoeff() {
#ifdef HAS_SPECULAR_AND_GLOSS_MAP
   return vSampleSpecularAndGloss(vGetTexCoord0());
#else
	return vec2(cbSpecularProperty.uSpecularIntensity, cbSpecularProperty.uGloss);
#endif
}


void main(void) {
	oAlbedoMap = GetDiffuseCoeff();
	oNormalMap = vec4(vPackNormal(vGetVertexNormal()), 0, 0);
	oSpecularAndGlossMap = vec4(GetSpecularAndGlossCoeff(), vec2(0, 0));
}

