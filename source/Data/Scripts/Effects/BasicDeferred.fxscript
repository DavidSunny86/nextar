
shader BasicDeferred {

   tags deferred;

   pass GBuffer {
         
      import-cbuffer ObjectProperties (activation = always);
      
      texture-state {
         sampler s0 linear-clamp;
         unit diffuseMap s0 (activate = "Maps.DiffuseMap");
         unit specularAndGloss s0 (activate = "Maps.SpecularAndGlossMap");
         unit normalMap s0 (activate = "Maps.NormalMap");
      }

      depth-stencil-state {
         depth-state test-and-write;
         stencil-state disable;
      }

      raster-state default;

      blend-state disable;

      program {
         define always HAS_NORMAL_CHANNEL;
         define "Maps.DiffuseMap" HAS_DIFFUSE_MAP HAS_TEXCOORD0_CHANNEL;
         define "Maps.NormalMap" HAS_NORMAL_MAP  HAS_TEXCOORD0_CHANNEL;
         define "Maps.SpecularAndGlossMap" HAS_SPECULAR_AND_GLOSS_MAP  HAS_TEXCOORD0_CHANNEL;
         
         vertex-program Deferred;
         fragment-program Deferred;
      }
   }

}
